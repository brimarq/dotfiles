#!/usr/bin/env bash

# Shell prompt based on the Solarized Dark theme.
# Screenshot: http://i.imgur.com/EkEtphC.png
# Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles
# iTerm → Profiles → Text → use 13pt Monaco with 1.1 vertical spacing.

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM='xterm-256color';
fi;

prompt_git() {
	local s='';
	local branchName='';

	# Check if the current directory is in a Git repository.
	if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

		# check if the current directory is in .git before running git checks
		if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

			# Ensure the index is up to date.
			git update-index --really-refresh -q &>/dev/null;

			# Check for uncommitted changes in the index.
			if ! $(git diff --quiet --ignore-submodules --cached); then
				s+='+';
			fi;

			# Check for unstaged changes.
			if ! $(git diff-files --quiet --ignore-submodules --); then
				s+='!';
			fi;

			# Check for untracked files.
			if [ -n "$(git ls-files --others --exclude-standard)" ]; then
				s+='?';
			fi;

			# Check for stashed files.
			if $(git rev-parse --verify refs/stash &>/dev/null); then
				s+='$';
			fi;

		fi;

		# Get the short symbolic ref.
		# If HEAD isn’t a symbolic ref, get the short SHA for the latest commit
		# Otherwise, just give up.
		branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
			git rev-parse --short HEAD 2> /dev/null || \
			echo '(unknown)')";

		[ -n "${s}" ] && s=" [${s}]";

		echo -e "${1}${branchName}${2}${s}";
	else
		return;
	fi;
}

if tput setaf 1 &> /dev/null; then
	tput sgr0; # reset colors
	bold=$(tput bold);
	reset=$(tput sgr0);
	# Solarized colors, taken from http://git.io/solarized-colors.
	#black=$(tput setaf 0); #000000
	#blue=$(tput setaf 33); #0087ff
	#cyan=$(tput setaf 37); #00afaf
	#green=$(tput setaf 64); #5f8700
	truegreen=$(tput setaf 46); #00ff00
	orange=$(tput setaf 166); #d75f00
	bright_orange=$(tput setaf 208); #ff8700
	purple=$(tput setaf 125); #af005f
	bright_orange2=$(tput setaf 214); #ffaf00
	gold=$(tput setaf 178); #d7af00
	#red=$(tput setaf 124); #af0000
	violet=$(tput setaf 61); #5f5faf
	#white=$(tput setaf 15); #ffffff
	#yellow=$(tput setaf 136); #af8700

	# Wez colors
	black=$(tput setaf 0); #000000
	red=$(tput setaf 160); #d70000
	green=$(tput setaf 34); #00af00
	yellow=$(tput setaf 184); #d7d700
	blue=$(tput setaf 62); #5f5fd7
	magenta=$(tput setaf 165); #d700ff
	cyan=$(tput setaf 44); #00d7d7
	white=$(tput setaf 252); #d0d0d0
	gray=$(tput setaf 242); #6c6c6c
	bright_red=$(tput setaf 203); #ff5f5f
	bright_green=$(tput setaf 84); #5fff5f
	bright_yellow=$(tput setaf 227); #ffff5f
	bright_blue=$(tput setaf 69); #5f87ff
	bright_magenta=$(tput setaf 207); #ff5fff
	bright_cyan=$(tput setaf 87); #5fffff
	bright_white=$(tput setaf 231); #ffffff

else
	bold='';
	reset="\e[0m";
	black="\e[1;30m";
	blue="\e[1;34m";
	cyan="\e[1;36m";
	green="\e[1;32m";
	orange="\e[1;33m";
	purple="\e[1;35m";
	red="\e[1;31m";
	violet="\e[1;35m";
	white="\e[1;37m";
	yellow="\e[1;33m";
fi;

# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
	userStyle="${red}";
else
	userStyle="${green}";
fi;

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
	hostStyle="${bold}${bright_red}";
else
	hostStyle="${bright_green}";
fi;

# Set the terminal title and prompt.
PS1="\[\033]0;\W\007\]"; # working directory base name
# PS1+="\n"; # newline
# PS1+="\[${cyan}\][\[${white}\]\t\[${cyan}\]] "; # 24-hr time (hh:mm:ss) in brackets
# PS1+="\[${white}\]\d"; # date (DDD MMM dd)
PS1+="\[${bold}\]\n";
# PS1+="\[${gray}\][\D{%y%m%d.%H%M%S}] "; # 24-hr time (hh:mm:ss)
PS1+="\[${gray}\][\D{%m%d %H:%M:%S}] "; # 24-hr time (hh:mm:ss)
PS1+="\[${userStyle}\]\u"; # username
PS1+="\[${gray}\] @ ";
PS1+="\[${hostStyle}\]\h"; # host
PS1+="\[${gray}\] in ";
PS1+="\[${gold}\]\w"; # working directory full path
# PS1+="\[${gold}\]${PWD%/*}/"; # path to working directory
# PS1+="\[${bright_yellow}\]${PWD##*/} "; # working directory
PS1+="\$(prompt_git \"\[${gray}\] on \[${violet}\]\" \"\[${blue}\]\")"; # Git repository details
PS1+="\n";
PS1+="\[${bright_green}\]\$ \[${reset}\]"; # `$` (and reset color)
export PS1;

PS2="\[${yellow}\]→ \[${reset}\]";
export PS2;
